package lightheadfox.ru.library_system;

import lightheadfox.ru.library_system.config.SpringConfig__TestContext001_BeanDefinitions;
import lightheadfox.ru.library_system.service.impl.BookServiceImpl__TestContext001_BeanDefinitions;
import lightheadfox.ru.library_system.web.rest.BookController__TestContext001_BeanDefinitions;
import org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator__TestContext001_BeanDefinitions;
import org.springframework.aot.generate.Generated;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.hateoas.HateoasProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.SecurityProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.ServerProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.WebProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.jackson.JsonMixinModuleEntries__TestContext001_BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__TestContext001_BeanDefinitions;
import org.springframework.boot.test.mock.mockito.MockitoPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__TestContext001_BeanDefinitions;
import org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__TestContext001_BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__TestContext001_BeanDefinitions;
import org.springframework.data.rest.webmvc.RestControllerConfiguration__TestContext001_BeanDefinitions;
import org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions;
import org.springframework.data.web.config.SpringDataJacksonConfiguration__TestContext001_BeanDefinitions;
import org.springframework.hateoas.config.HateoasConfiguration__TestContext001_BeanDefinitions;
import org.springframework.hateoas.config.RestTemplateHateoasConfiguration__TestContext001_BeanDefinitions;
import org.springframework.hateoas.config.WebMvcEntityLinksConfiguration__TestContext001_BeanDefinitions;
import org.springframework.hateoas.config.WebMvcHateoasConfiguration__TestContext001_BeanDefinitions;
import org.springframework.hateoas.config.WebTestHateoasConfiguration__TestContext001_BeanDefinitions;
import org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration__TestContext001_BeanDefinitions;
import org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration__TestContext001_BeanDefinitions;
import org.springframework.plugin.core.OrderAwarePluginRegistry__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer__TestContext001_BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
@Generated
public class LibrarySystemApplicationTests__TestContext001_BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor", MockitoPostProcessor__TestContext001_BeanDefinitions.SpyPostProcessor.getSpyPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor", MockitoPostProcessor__TestContext001_BeanDefinitions.getMockitoPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__TestContext001_BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__TestContext001_BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("librarySystemApplication", LibrarySystemApplication__TestContext001_BeanDefinitions.getLibrarySystemApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("springConfig", SpringConfig__TestContext001_BeanDefinitions.getSpringConfigBeanDefinition());
    beanFactory.registerBeanDefinition("bookServiceImpl", BookServiceImpl__TestContext001_BeanDefinitions.getBookServiceImplBeanDefinition());
    beanFactory.registerBeanDefinition("bookController", BookController__TestContext001_BeanDefinitions.getBookControllerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__TestContext001_BeanDefinitions.BasePackages.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration", SslAutoConfiguration__TestContext001_BeanDefinitions.getSslAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("fileWatcher", SslAutoConfiguration__TestContext001_BeanDefinitions.getFileWatcherBeanDefinition());
    beanFactory.registerBeanDefinition("sslPropertiesSslBundleRegistrar", SslAutoConfiguration__TestContext001_BeanDefinitions.getSslPropertiesSslBundleRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("sslBundleRegistry", SslAutoConfiguration__TestContext001_BeanDefinitions.getSslBundleRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__TestContext001_BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__TestContext001_BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__TestContext001_BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__TestContext001_BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties", SslProperties__TestContext001_BeanDefinitions.getSslPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration", WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions.TomcatWebSocketConfiguration.getTomcatWebSocketConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("websocketServletWebServerCustomizer", WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions.TomcatWebSocketConfiguration.getWebsocketServletWebServerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration", WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions.getWebSocketServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat", ServletWebServerFactoryConfiguration__TestContext001_BeanDefinitions.EmbeddedTomcat.getEmbeddedTomcatBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactory", ServletWebServerFactoryConfiguration__TestContext001_BeanDefinitions.EmbeddedTomcat.getTomcatServletWebServerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration", ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getServletWebServerFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getTomcatServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("server-org.springframework.boot.autoconfigure.web.ServerProperties", ServerProperties__TestContext001_BeanDefinitions.getServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("webServerFactoryCustomizerBeanPostProcessor", WebServerFactoryCustomizerBeanPostProcessor__TestContext001_BeanDefinitions.getWebServerFactoryCustomizerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageRegistrarBeanPostProcessor", ErrorPageRegistrarBeanPostProcessor__TestContext001_BeanDefinitions.getErrorPageRegistrarBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServlet", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletBeanDefinition());
    beanFactory.registerBeanDefinition("spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties", WebMvcProperties__TestContext001_BeanDefinitions.getWebMvcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServletRegistration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.getDispatcherServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskExecutorBuilder", TaskExecutorConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.TaskExecutorBuilderConfiguration.getTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskExecutorBuilder", TaskExecutorConfigurations__TestContext001_BeanDefinitions.TaskExecutorBuilderConfiguration.getTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskExecutorBuilder", TaskExecutorConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.TaskExecutorConfiguration.getTaskExecutorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutorConfigurations__TestContext001_BeanDefinitions.TaskExecutorConfiguration.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__TestContext001_BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__TestContext001_BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getValidationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultValidator", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getDefaultValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("methodValidationPostProcessor", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getMethodValidationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.WhitelabelErrorViewConfiguration.getWhitelabelErrorViewConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("error", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.WhitelabelErrorViewConfiguration.getErrorBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameViewResolver", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.WhitelabelErrorViewConfiguration.getBeanNameViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.DefaultErrorViewResolverConfiguration.getDefaultErrorViewResolverConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("conventionErrorViewResolver", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.DefaultErrorViewResolverConfiguration.getConventionErrorViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.web-org.springframework.boot.autoconfigure.web.WebProperties", WebProperties__TestContext001_BeanDefinitions.getWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getErrorMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("errorAttributes", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getErrorAttributesBeanDefinition());
    beanFactory.registerBeanDefinition("basicErrorController", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getBasicErrorControllerBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageCustomizer", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getErrorPageCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("preserveErrorControllerTargetClassPostProcessor", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getPreserveErrorControllerTargetClassPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getEnableWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageNotAcceptableHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageNotAcceptableHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("localeResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getLocaleResolverBeanDefinition());
    beanFactory.registerBeanDefinition("themeResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getThemeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("flashMapManager", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getFlashMapManagerBeanDefinition());
    beanFactory.registerBeanDefinition("mvcConversionService", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("mvcValidator", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("mvcContentNegotiationManager", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcContentNegotiationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPatternParser", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcPatternParserBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUrlPathHelper", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcUrlPathHelperBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPathMatcher", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcPathMatcherBeanDefinition());
    beanFactory.registerBeanDefinition("viewControllerHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getViewControllerHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getBeanNameHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getResourceHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcResourceUrlProvider", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcResourceUrlProviderBeanDefinition());
    beanFactory.registerBeanDefinition("defaultServletHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getDefaultServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerFunctionAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getHandlerFunctionAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUriComponentsContributor", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcUriComponentsContributorBeanDefinition());
    beanFactory.registerBeanDefinition("httpRequestHandlerAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getHttpRequestHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("simpleControllerHandlerAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getSimpleControllerHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerExceptionResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getHandlerExceptionResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcViewResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospector", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcHandlerMappingIntrospectorBeanDefinition());
    beanFactory.registerBeanDefinition("viewNameTranslator", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getViewNameTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getWebMvcAutoConfigurationAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("defaultViewResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getDefaultViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("viewResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("requestContextFilter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getRequestContextFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.getWebMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("formContentFilter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.getFormContentFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration", AopAutoConfiguration__TestContext001_BeanDefinitions.ClassProxyingConfiguration.getClassProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("forceAutoProxyCreatorToUseClassProxying", AopAutoConfiguration__TestContext001_BeanDefinitions.ClassProxyingConfiguration.getForceAutoProxyCreatorToUseClassProxyingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__TestContext001_BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getJacksonObjectMapperBuilderCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("standardJacksonObjectMapperBuilderCustomizer", JacksonAutoConfiguration__TestContext001_BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getStandardJacksonObjectMapperBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties", JacksonProperties__TestContext001_BeanDefinitions.getJacksonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapperBuilder", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNamesModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapper", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonMixinConfiguration.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JsonMixinModuleEntries__TestContext001_BeanDefinitions.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration", TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions.getTransactionManagerCustomizationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("platformTransactionManagerCustomizers", TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions.getPlatformTransactionManagerCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("transactionExecutionListeners", TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions.getTransactionExecutionListenersBeanDefinition());
    beanFactory.registerBeanDefinition("spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties", TransactionProperties__TestContext001_BeanDefinitions.getTransactionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__TestContext001_BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__TestContext001_BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__TestContext001_BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__TestContext001_BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration", PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions.getPersistenceExceptionTranslationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceExceptionTranslationPostProcessor", PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions.getPersistenceExceptionTranslationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("stringHttpMessageConverter", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration", JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("mappingJackson2HttpMessageConverter", JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration", JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions.getJacksonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.getHttpMessageConvertersAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageConverters", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.getMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration", HalMediaTypeConfiguration__TestContext001_BeanDefinitions.getHalMediaTypeConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("halLinkDisocoverer", HalMediaTypeConfiguration__TestContext001_BeanDefinitions.getHalLinkDisocovererBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration", HalFormsMediaTypeConfiguration__TestContext001_BeanDefinitions.getHalFormsMediaTypeConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("halFormsLinkDiscoverer", HalFormsMediaTypeConfiguration__TestContext001_BeanDefinitions.getHalFormsLinkDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("halFormsTemplatePropertyWriter", HalFormsMediaTypeConfiguration__TestContext001_BeanDefinitions.getHalFormsTemplatePropertyWriterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.WebTestHateoasConfiguration", WebTestHateoasConfiguration__TestContext001_BeanDefinitions.getWebTestHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webTestClientConfigurer", WebTestHateoasConfiguration__TestContext001_BeanDefinitions.getWebTestClientConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.HateoasConfiguration", HateoasConfiguration__TestContext001_BeanDefinitions.getHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageResolver", HateoasConfiguration__TestContext001_BeanDefinitions.getMessageResolverBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaWebMvcConverters", HateoasConfiguration__TestContext001_BeanDefinitions.getHypermediaWebMvcConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("defaultRelProvider", HateoasConfiguration__TestContext001_BeanDefinitions.getDefaultRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("annotationRelProvider", HateoasConfiguration__TestContext001_BeanDefinitions.getAnnotationRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("_relProvider", HateoasConfiguration__TestContext001_BeanDefinitions.getRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("relProviderPluginRegistry", HateoasConfiguration__TestContext001_BeanDefinitions.getRelProviderPluginRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("linkDiscoverers", HateoasConfiguration__TestContext001_BeanDefinitions.getLinkDiscoverersBeanDefinition());
    beanFactory.registerBeanDefinition("linkDiscovererRegistry", OrderAwarePluginRegistry__TestContext001_BeanDefinitions.getLinkDiscovererRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.WebMvcEntityLinksConfiguration", WebMvcEntityLinksConfiguration__TestContext001_BeanDefinitions.getWebMvcEntityLinksConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcEntityLinks", WebMvcEntityLinksConfiguration__TestContext001_BeanDefinitions.getWebMvcEntityLinksBeanDefinition());
    beanFactory.registerBeanDefinition("entityLinksPluginRegistry", WebMvcEntityLinksConfiguration__TestContext001_BeanDefinitions.getEntityLinksPluginRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("delegatingEntityLinks", WebMvcEntityLinksConfiguration__TestContext001_BeanDefinitions.getDelegatingEntityLinksBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.WebMvcHateoasConfiguration", WebMvcHateoasConfiguration__TestContext001_BeanDefinitions.getWebMvcHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaWebMvcConfigurer", WebMvcHateoasConfiguration__TestContext001_BeanDefinitions.getHypermediaWebMvcConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("representationModelProcessorInvoker", WebMvcHateoasConfiguration__TestContext001_BeanDefinitions.getRepresentationModelProcessorInvokerBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaRepresentionModelProcessorConfigurator", WebMvcHateoasConfiguration__TestContext001_BeanDefinitions.getHypermediaRepresentionModelProcessorConfiguratorBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcLinkBuilderFactory", WebMvcHateoasConfiguration__TestContext001_BeanDefinitions.getWebMvcLinkBuilderFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.RestTemplateHateoasConfiguration", RestTemplateHateoasConfiguration__TestContext001_BeanDefinitions.getRestTemplateHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaRestTemplateBeanPostProcessor", RestTemplateHateoasConfiguration__TestContext001_BeanDefinitions.getHypermediaRestTemplateBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaRestTemplateConfigurer", RestTemplateHateoasConfiguration__TestContext001_BeanDefinitions.getHypermediaRestTemplateConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.rest.webmvc.RestControllerConfiguration", RestControllerConfiguration__TestContext001_BeanDefinitions.getRestControllerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryController", RestControllerConfiguration__TestContext001_BeanDefinitions.getRepositoryControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryEntityController", RestControllerConfiguration__TestContext001_BeanDefinitions.getRepositoryEntityControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryPropertyReferenceController", RestControllerConfiguration__TestContext001_BeanDefinitions.getRepositoryPropertyReferenceControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositorySearchController", RestControllerConfiguration__TestContext001_BeanDefinitions.getRepositorySearchControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositorySchemaController", RestControllerConfiguration__TestContext001_BeanDefinitions.getRepositorySchemaControllerBeanDefinition());
    beanFactory.registerBeanDefinition("alpsController", RestControllerConfiguration__TestContext001_BeanDefinitions.getAlpsControllerBeanDefinition());
    beanFactory.registerBeanDefinition("profileController", RestControllerConfiguration__TestContext001_BeanDefinitions.getProfileControllerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataJacksonConfiguration", SpringDataJacksonConfiguration__TestContext001_BeanDefinitions.getSpringDataJacksonConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonGeoModule", SpringDataJacksonConfiguration__TestContext001_BeanDefinitions.getJacksonGeoModuleBeanDefinition());
    beanFactory.registerBeanDefinition("pageModule", SpringDataJacksonConfiguration__TestContext001_BeanDefinitions.getPageModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getRepositoryRestMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositories", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getRepositoriesBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryRelProvider", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getRepositoryRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("persistentEntities", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getPersistentEntitiesBeanDefinition());
    beanFactory.registerBeanDefinition("defaultConversionService", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getDefaultConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("validatingRepositoryEventListener", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getValidatingRepositoryEventListenerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaHelper", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getJpaHelperBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryRestConfiguration", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getRepositoryRestConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("projectionDefinitionRegistrar", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getProjectionDefinitionRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("metadataConfiguration", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getMetadataConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("baseUri", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getBaseUriBeanDefinition());
    beanFactory.registerBeanDefinition("annotatedEventHandlerInvoker", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getAnnotatedEventHandlerInvokerBeanDefinition());
    beanFactory.registerBeanDefinition("repoRequestArgumentResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getRepoRequestArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("resourceMetadataHandlerMethodArgumentResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getResourceMetadataHandlerMethodArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("backendIdHandlerMethodArgumentResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getBackendIdHandlerMethodArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("eTagArgumentResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getETagArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("entityLinks", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getEntityLinksBeanDefinition());
    beanFactory.registerBeanDefinition("persistentEntityArgumentResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getPersistentEntityArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("jsonSchemaConverter", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getJsonSchemaConverterBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonHttpMessageConverter", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("halJacksonHttpMessageConverter", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getHalJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("halFormsJacksonHttpMessageConverter", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getHalFormsJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("uriListHttpMessageConverter", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getUriListHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryExporterHandlerAdapter", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getRepositoryExporterHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("restHandlerMapping", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getRestHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceMappings", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getResourceMappingsBeanDefinition());
    beanFactory.registerBeanDefinition("linkCollector", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getLinkCollectorBeanDefinition());
    beanFactory.registerBeanDefinition("excerptProjector", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getExcerptProjectorBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryRestExceptionHandler", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getRepositoryRestExceptionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryInvokerFactory", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getRepositoryInvokerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("defaultMessageConverters", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getDefaultMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("alpsJsonHttpMessageConverter", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getAlpsJsonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("pageableResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getPageableResolverBeanDefinition());
    beanFactory.registerBeanDefinition("sortResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getSortResolverBeanDefinition());
    beanFactory.registerBeanDefinition("backendIdConverterRegistry", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getBackendIdConverterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("auditableBeanWrapperFactory", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getAuditableBeanWrapperFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("httpHeadersPreparer", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getHttpHeadersPreparerBeanDefinition());
    beanFactory.registerBeanDefinition("selfLinkProvider", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getSelfLinkProviderBeanDefinition());
    beanFactory.registerBeanDefinition("associationLinks", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getAssociationLinksBeanDefinition());
    beanFactory.registerBeanDefinition("representationModelAssemblersArgumentResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getRepresentationModelAssemblersArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("persistentEntityResourceAssemblerArgumentResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getPersistentEntityResourceAssemblerArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("enumTranslator", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getEnumTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("alpsConverter", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getAlpsConverterBeanDefinition());
    beanFactory.registerBeanDefinition("profileResourceProcessor", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getProfileResourceProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("pagedResourcesAssembler", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getPagedResourcesAssemblerBeanDefinition());
    beanFactory.registerBeanDefinition("pagedResourcesAssemblerArgumentResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getPagedResourcesAssemblerArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("slicedResourcesAssembler", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getSlicedResourcesAssemblerBeanDefinition());
    beanFactory.registerBeanDefinition("slicedResourcesAssemblerArgumentResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getSlicedResourcesAssemblerArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("offsetResolver", RepositoryRestMvcConfiguration__TestContext001_BeanDefinitions.getOffsetResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration", RepositoryRestMvcAutoConfiguration__TestContext001_BeanDefinitions.getRepositoryRestMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("springBootRepositoryRestConfigurer", RepositoryRestMvcAutoConfiguration__TestContext001_BeanDefinitions.getSpringBootRepositoryRestConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.data.rest-org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties", RepositoryRestProperties__TestContext001_BeanDefinitions.getRepositoryRestPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration", HypermediaAutoConfiguration__TestContext001_BeanDefinitions.getHypermediaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationJsonHalConfiguration", HypermediaAutoConfiguration__TestContext001_BeanDefinitions.getApplicationJsonHalConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.hateoas-org.springframework.boot.autoconfigure.hateoas.HateoasProperties", HateoasProperties__TestContext001_BeanDefinitions.getHateoasPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__TestContext001_BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__TestContext001_BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration", ObjectPostProcessorConfiguration__TestContext001_BeanDefinitions.getObjectPostProcessorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("objectPostProcessor", ObjectPostProcessorConfiguration__TestContext001_BeanDefinitions.getObjectPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration", AuthenticationConfiguration__TestContext001_BeanDefinitions.getAuthenticationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationManagerBuilder", AuthenticationConfiguration__TestContext001_BeanDefinitions.getAuthenticationManagerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("enableGlobalAuthenticationAutowiredConfigurer", AuthenticationConfiguration__TestContext001_BeanDefinitions.getEnableGlobalAuthenticationAutowiredConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("initializeUserDetailsBeanManagerConfigurer", AuthenticationConfiguration__TestContext001_BeanDefinitions.getInitializeUserDetailsBeanManagerConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("initializeAuthenticationProviderBeanManagerConfigurer", AuthenticationConfiguration__TestContext001_BeanDefinitions.getInitializeAuthenticationProviderBeanManagerConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration", WebSecurityConfiguration__TestContext001_BeanDefinitions.getWebSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("delegatingApplicationListener", WebSecurityConfiguration__TestContext001_BeanDefinitions.getDelegatingApplicationListenerBeanDefinition());
    beanFactory.registerBeanDefinition("webSecurityExpressionHandler", WebSecurityConfiguration__TestContext001_BeanDefinitions.getWebSecurityExpressionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("privilegeEvaluator", WebSecurityConfiguration__TestContext001_BeanDefinitions.getPrivilegeEvaluatorBeanDefinition());
    beanFactory.registerBeanDefinition("conversionServicePostProcessor", WebSecurityConfiguration__TestContext001_BeanDefinitions.getConversionServicePostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.getWebMvcSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("requestDataValueProcessor", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.getRequestDataValueProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.getSpringSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration", HttpSecurityConfiguration__TestContext001_BeanDefinitions.getHttpSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration.httpSecurity", HttpSecurityConfiguration__TestContext001_BeanDefinitions.getHttpSecurityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration", SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions.WebSecurityEnablerConfiguration.getWebSecurityEnablerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$SecurityFilterChainConfiguration", SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions.SecurityFilterChainConfiguration.getSecurityFilterChainConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultSecurityFilterChain", SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions.SecurityFilterChainConfiguration.getDefaultSecurityFilterChainBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration", SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions.getSpringBootWebSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration", SecurityAutoConfiguration__TestContext001_BeanDefinitions.getSecurityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationEventPublisher", SecurityAutoConfiguration__TestContext001_BeanDefinitions.getAuthenticationEventPublisherBeanDefinition());
    beanFactory.registerBeanDefinition("spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties", SecurityProperties__TestContext001_BeanDefinitions.getSecurityPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration", SecurityFilterAutoConfiguration__TestContext001_BeanDefinitions.getSecurityFilterAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("securityFilterChainRegistration", SecurityFilterAutoConfiguration__TestContext001_BeanDefinitions.getSecurityFilterChainRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration", UserDetailsServiceAutoConfiguration__TestContext001_BeanDefinitions.getUserDetailsServiceAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("inMemoryUserDetailsManager", UserDetailsServiceAutoConfiguration__TestContext001_BeanDefinitions.getInMemoryUserDetailsManagerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__TestContext001_BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__TestContext001_BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__TestContext001_BeanDefinitions.DependsOnDatabaseInitializationPostProcessor.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskSchedulerBuilder", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.TaskSchedulerBuilderConfiguration.getTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskSchedulerBuilder", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.TaskSchedulerBuilderConfiguration.getTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskSchedulerBuilder", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__TestContext001_BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__TestContext001_BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.getTransactionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("httpMessageConvertersRestClientCustomizer", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getHttpMessageConvertersRestClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientSsl", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientSslBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilderConfigurer", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilder", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration", RestTemplateAutoConfiguration__TestContext001_BeanDefinitions.getRestTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilderConfigurer", RestTemplateAutoConfiguration__TestContext001_BeanDefinitions.getRestTemplateBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilder", RestTemplateAutoConfiguration__TestContext001_BeanDefinitions.getRestTemplateBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration", HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions.getHttpEncodingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("characterEncodingFilter", HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions.getCharacterEncodingFilterBeanDefinition());
    beanFactory.registerBeanDefinition("localeCharsetMappingsCustomizer", HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions.getLocaleCharsetMappingsCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", MultipartAutoConfiguration__TestContext001_BeanDefinitions.getMultipartAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("multipartConfigElement", MultipartAutoConfiguration__TestContext001_BeanDefinitions.getMultipartConfigElementBeanDefinition());
    beanFactory.registerBeanDefinition("multipartResolver", MultipartAutoConfiguration__TestContext001_BeanDefinitions.getMultipartResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties", MultipartProperties__TestContext001_BeanDefinitions.getMultipartPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospectorRequestTransformer", HandlerMappingIntrospectorRequestTransformer__TestContext001_BeanDefinitions.getMvcHandlerMappingIntrospectorRequestTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("springSecurityFilterChain", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.CompositeFilterChainProxy.getSpringSecurityFilterChainBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", InfrastructureAdvisorAutoProxyCreator__TestContext001_BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "taskExecutor");
  }
}
